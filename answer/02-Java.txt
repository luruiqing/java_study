1、hashMap中需要固定存放50个对象, 怎么初始化？
	new HashMap(64, 0.78125f);

2、hashMap的结构, 1.7和1.8有哪些区别？
	(1)1.7是头插法, 1.8是尾插法, 并且加入了红黑树
	(2)扩容后数据存储位置的计算方式不一样
	(3)1.7是扩容后插入数据, 1.8是扩容前插入再转移数据

3、concurrentHashMap1.7和1.8有哪些区别？
	(1)1.7是使用Segment段来分组, 一个段就相当于一个HashMap的数据结构, 每个段使用一个锁
	(2)1.8改成Synchronized+CAS来处理, 一个链表一个锁
	(3)1.8使用了红黑树

4、CopyOnWriteArrayList的原理和优缺点是什么？
	(1)基本思路: 修改List时, 会先把内容copy一份, 修改之后再将原List的引用指向新的地址
	(2)修改时不会影响原来的内容, 所以并发读不需要加锁
	(3)修改列表时会加ReentrantLock锁, 适用于读多写少的场景
	(4)内存占用问题, 可能会引起频繁的GC
	(5)不能保证数据的实时一致性, 只能保证最终一致性

5、ArrayList如何扩容？
	(1)内部是Object数组, 默认长度是10
	(2)元素个数超过数组长度时, 会使用Arrays.copyOf将数组扩容成1.5倍

6、通过Java反射能否获取到对象的私有属性？能否执行私有方法？
    都可以

7、HashSet是如何保证元素不重复的？
    (1)HashSet内部是一个HashMap, 它的值是存储在HashMap的key里面的, 而正ashMap的key是不能重复的
    (2)为了保证key不重复, 需重写hashCode和equals来实现

8、TreeMap内部数据结构是怎样的？
    TreeMap是通过红黑树实现了一个有序的key-value集合

9、从BlockingQueue中取出元素可以通过take和poll方法, 这两种方法有什么区别？
    队列为空时, take会阻塞, 直到队列中有可用元素为止; poll直接返回null

10、HashMap的容量为什么是2的倍数？
	indexFor可以用位运算代替取模, 而且hash会更加平均的分布, 减少冲突


